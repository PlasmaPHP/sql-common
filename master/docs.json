{"Plasma\\SQL\\ConflictResolution":{"name":"Plasma\\SQL\\ConflictResolution","line":15,"short_desc":"Used to describe which keyword is used for the insert and what is appended to the SQL query.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/ConflictResolution.php","relative_file":"\/src\/ConflictResolution.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":31,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"keyword":{"name":"keyword","line":31,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"appendum":{"name":"appendum","line":31,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"getAppendum":{"name":"getAppendum","line":48,"short_desc":"Get the string to append to the SQL query.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getKeyword":{"name":"getKeyword","line":40,"short_desc":"Get the SQL keyword for the insert.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\GrammarInterface":{"name":"Plasma\\SQL\\GrammarInterface","line":15,"short_desc":"Grammar describe a SQL flavour, most notably MySQL vs. PostgreSQL.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/GrammarInterface.php","relative_file":"\/src\/GrammarInterface.php","parent":null,"modifiers":null,"is_trait":false,"is_interface":true,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"getSQLForRowLocking":{"name":"getSQLForRowLocking","line":57,"short_desc":"Get the SQL command for the given row-level locking mode.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"lock":{"name":"lock","line":57,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"onConflictToSQL":{"name":"onConflictToSQL","line":38,"short_desc":"Converts an ON CONFLICT resolution to the equivalent DBMS-specific SQL string.","long_desc":"","hint":[["Plasma\\SQL\\Plasma\\SQL\\ConflictResolution",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":39,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryBuilder"],"attributes":{"startLine":39,"endLine":39}},"default":null,"variadic":false,"is_by_ref":false},"conflict":{"name":"conflict","line":40,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\OnConflict",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","OnConflict"],"attributes":{"startLine":40,"endLine":40}},"default":null,"variadic":false,"is_by_ref":false},"columns":{"name":"columns","line":41,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"parameters":{"name":"parameters","line":42,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"quoteColumn":{"name":"quoteColumn","line":28,"short_desc":"Wraps the column name into quotes.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":28,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"quoteTable":{"name":"quoteTable","line":21,"short_desc":"Wraps the table name into quotes.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":21,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"supportsReturning":{"name":"supportsReturning","line":63,"short_desc":"Whether the grammar supports RETURNING.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"supportsRowLocking":{"name":"supportsRowLocking","line":49,"short_desc":"Whether the grammar supports row-level locking.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\Grammar\\MySQL":{"name":"Plasma\\SQL\\Grammar\\MySQL","line":15,"short_desc":"MySQL Grammar.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\Grammar","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/Grammar\/MySQL.php","relative_file":"\/src\/Grammar\/MySQL.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\GrammarInterface":"Plasma\\SQL\\GrammarInterface"},"traits":[],"source":null,"properties":[],"methods":{"getSQLForRowLocking":{"name":"getSQLForRowLocking","line":118,"short_desc":"Get the SQL command for the given row-level locking mode.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"lock":{"name":"lock","line":118,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"onConflictToSQL":{"name":"onConflictToSQL","line":58,"short_desc":"Converts an ON CONFLICT resolution to the equivalent DBMS-specific SQL string.","long_desc":"MySQL does not support conflict targets.","hint":[["Plasma\\SQL\\Grammar\\Plasma\\SQL\\ConflictResolution",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":59,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryBuilder"],"attributes":{"startLine":59,"endLine":59}},"default":null,"variadic":false,"is_by_ref":false},"conflict":{"name":"conflict","line":60,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\OnConflict",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","OnConflict"],"attributes":{"startLine":60,"endLine":60}},"default":null,"variadic":false,"is_by_ref":false},"columns":{"name":"columns","line":61,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"parameters":{"name":"parameters","line":62,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"quoteColumn":{"name":"quoteColumn","line":41,"short_desc":"Wraps the column name into quotes.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":41,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"quoteTable":{"name":"quoteTable","line":28,"short_desc":"Wraps the table name into quotes.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":28,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"supportsReturning":{"name":"supportsReturning","line":142,"short_desc":"Whether the grammar supports RETURNING.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"supportsRowLocking":{"name":"supportsRowLocking","line":108,"short_desc":"Whether the grammar supports row-level locking.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":{"ESCAPE_CHARACTER":{"name":"ESCAPE_CHARACTER","line":21,"short_desc":"The character used to wrap tables and columns.","long_desc":"","source":["const ESCAPE_CHARACTER = '`';",""]}}},"Plasma\\SQL\\Grammar\\PostgreSQL":{"name":"Plasma\\SQL\\Grammar\\PostgreSQL","line":15,"short_desc":"PostgreSQL Grammar.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\Grammar","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/Grammar\/PostgreSQL.php","relative_file":"\/src\/Grammar\/PostgreSQL.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\GrammarInterface":"Plasma\\SQL\\GrammarInterface"},"traits":[],"source":null,"properties":[],"methods":{"getSQLForRowLocking":{"name":"getSQLForRowLocking","line":130,"short_desc":"Get the SQL command for the given row-level locking mode.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"lock":{"name":"lock","line":130,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"onConflictToSQL":{"name":"onConflictToSQL","line":57,"short_desc":"Converts an ON CONFLICT resolution to the equivalent DBMS-specific SQL string.","long_desc":"","hint":[["Plasma\\SQL\\Grammar\\Plasma\\SQL\\ConflictResolution",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":58,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryBuilder"],"attributes":{"startLine":58,"endLine":58}},"default":null,"variadic":false,"is_by_ref":false},"conflict":{"name":"conflict","line":59,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\OnConflict",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","OnConflict"],"attributes":{"startLine":59,"endLine":59}},"default":null,"variadic":false,"is_by_ref":false},"columns":{"name":"columns","line":60,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"parameters":{"name":"parameters","line":61,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false}}},"quoteColumn":{"name":"quoteColumn","line":41,"short_desc":"Wraps the column name into quotes.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":41,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"quoteTable":{"name":"quoteTable","line":28,"short_desc":"Wraps the table name into quotes.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":28,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"supportsReturning":{"name":"supportsReturning","line":154,"short_desc":"Whether the grammar supports RETURNING.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"supportsRowLocking":{"name":"supportsRowLocking","line":120,"short_desc":"Whether the grammar supports row-level locking.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":{"ESCAPE_CHARACTER":{"name":"ESCAPE_CHARACTER","line":21,"short_desc":"The character used to wrap tables and columns.","long_desc":"","source":["const ESCAPE_CHARACTER = '\"';",""]}}},"Plasma\\SQL\\OnConflict":{"name":"Plasma\\SQL\\OnConflict","line":15,"short_desc":"Represents an ON CONFLICT resolution.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/OnConflict.php","relative_file":"\/src\/OnConflict.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":66,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"type":{"name":"type","line":66,"short_desc":"The conflict resolution type.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"addConflictTarget":{"name":"addConflictTarget","line":135,"short_desc":"Add a conflict target.","long_desc":"","hint":[["Plasma\\SQL\\OnConflict",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"target":{"name":"target","line":135,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Constraint",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"addReplaceColumn":{"name":"addReplaceColumn","line":108,"short_desc":"Adds a column to replace with the new value on conflict.","long_desc":"This has only any meaning when using the replace columns resolution.","hint":[["Plasma\\SQL\\OnConflict",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":108,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"getConflictTargets":{"name":"getConflictTargets","line":125,"short_desc":"Get the conflict targets.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getReplaceColumns":{"name":"getReplaceColumns","line":97,"short_desc":"Get the columns to replace.","long_desc":"Only has any value when the correct type is set.","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getType":{"name":"getType","line":88,"short_desc":"Get the conflict resolution type.","long_desc":"For the meanings of the value,\nsee the class constants.","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":{"RESOLUTION_DO_NOTHING":{"name":"RESOLUTION_DO_NOTHING","line":28,"short_desc":"On conflict, nothing will be done. The error will be ignred.","long_desc":"","source":["const RESOLUTION_DO_NOTHING = 1;",""]},"RESOLUTION_ERROR":{"name":"RESOLUTION_ERROR","line":21,"short_desc":"On conflict, an error will be raised. This it the default.","long_desc":"","source":["const RESOLUTION_ERROR = 0;",""]},"RESOLUTION_REPLACE_ALL":{"name":"RESOLUTION_REPLACE_ALL","line":37,"short_desc":"On conflict, replaces all columns, except the primary key.","long_desc":"This includes auto generated columns such as `created_at`\nand `updated_at`.","source":["const RESOLUTION_REPLACE_ALL = 2;",""]},"RESOLUTION_REPLACE_COLUMNS":{"name":"RESOLUTION_REPLACE_COLUMNS","line":44,"short_desc":"On conflict, it will replace the defined columns.","long_desc":"","source":["const RESOLUTION_REPLACE_COLUMNS = 4;",""]}}},"Plasma\\SQL\\QueryBuilder":{"name":"Plasma\\SQL\\QueryBuilder","line":18,"short_desc":"Provides an implementation for a SQL querybuilder.","long_desc":"This class has interoperability with all other query builders\nimplementing the SQL query builder interface.","hint":null,"tags":[],"namespace":"Plasma\\SQL","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryBuilder.php","relative_file":"\/src\/QueryBuilder.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQLQueryBuilderInterface":"Plasma\\SQLQueryBuilderInterface"},"traits":[],"source":null,"properties":[],"methods":{"between":{"name":"between","line":194,"short_desc":"Creates a new BetweenParameter for the two between values.","long_desc":"","hint":[["\\Plasma\\SQL\\QueryExpressions\\BetweenParameter",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"first":{"name":"first","line":194,"short_desc":"","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"second":{"name":"second","line":194,"short_desc":"","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"column":{"name":"column","line":213,"short_desc":"Creates a new Column.","long_desc":"","hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":213,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":213,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":213,"endLine":213}},"default":"null","variadic":false,"is_by_ref":false},"allowEscape":{"name":"allowEscape","line":213,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"true","variadic":false,"is_by_ref":false}}},"create":{"name":"create","line":172,"short_desc":"Creates a new instance of the querybuilder.","long_desc":"","hint":[["\\Plasma\\QueryBuilderInterface",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"createWithGrammar":{"name":"createWithGrammar","line":181,"short_desc":"Creates a new instance of the querybuilder with a grammar.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":181,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":181,"endLine":181}},"default":null,"variadic":false,"is_by_ref":false}}},"delete":{"name":"delete","line":471,"short_desc":"Deletes rows passing the selection.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"distinct":{"name":"distinct","line":281,"short_desc":"Adds a DISTINCT flag to this query.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"fragment":{"name":"fragment","line":223,"short_desc":"Creates a new Fragment. All placeholders `?` in the operation string will be replaced by the following arguments.","long_desc":"","hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"operation":{"name":"operation","line":223,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"placeholders":{"name":"placeholders","line":223,"short_desc":"All placeholders will be casted to string.","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":true,"is_by_ref":false}}},"from":{"name":"from","line":261,"short_desc":"Sets the target table to the given table.","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the table name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":261,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":261,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":261,"endLine":261}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":261,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"getParameters":{"name":"getParameters","line":926,"short_desc":"Returns the associated parameters for the query.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Plasma\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":[]},"getQuery":{"name":"getQuery","line":897,"short_desc":"Returns the query.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Plasma\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":[]},"groupBy":{"name":"groupBy","line":840,"short_desc":"Add an `GROUP BY` to the query. This will aggregate.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":840,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"having":{"name":"having","line":706,"short_desc":"Put the previous HAVING clausel with a logical AND constraint to this HAVING clausel.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":706,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":706,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":706,"endLine":706}},"default":"null","variadic":false,"is_by_ref":false},"value":{"name":"value","line":706,"short_desc":"If not a `Parameter` instance, the value will be wrapped into one.","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"havingExt":{"name":"havingExt","line":736,"short_desc":"Extended having building. The callback gets a `WhereBuilder` instance, where the callback is supposed to build the HAVING clausel.","long_desc":"The HAVING clausel gets wrapped into parenthesis and with an AND constraint coupled to the previous one.\nSince the HAVING clausel is syntax-wise the same as the WHERE clausel, the WhereBuilder gets used for HAVING, too.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Plasma\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":{"having":{"name":"having","line":736,"short_desc":"Callback signature: `function (\\Plasma\\SQL\\WhereBuilder $qb): void`.","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"havingFragment":{"name":"havingFragment","line":779,"short_desc":"Put the previous HAVING clausel with a logical AND constraint to this fragmented HAVING clausel.","long_desc":"Since the HAVING clausel is syntax-wise the same as the WHERE clausel, the WhereBuilder gets used for HAVING, too.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"fragment":{"name":"fragment","line":779,"short_desc":"The fragment is expected to have `$$` somehaving to inject the HAVING clausel (from the builder) into its place.","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Fragment"],"attributes":{"startLine":779,"endLine":779}},"default":null,"variadic":false,"is_by_ref":false},"builder":{"name":"builder","line":779,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","WhereBuilder"],"attributes":{"startLine":779,"endLine":779}},"default":null,"variadic":false,"is_by_ref":false}}},"innerJoin":{"name":"innerJoin","line":511,"short_desc":"Adds a INNER JOIN query with the table and optional alias.","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the column name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":511,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":511,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":511,"endLine":511}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":511,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"insert":{"name":"insert","line":373,"short_desc":"Insert a row.","long_desc":"If you want to insert multiple rows, pass in `Parameter`s as values,\nprepare the query once and execute it multiple times while setting\nthe `Parameter` values.\n\nOptions:\n```\narray(\n    'allowEscape' => bool, (whether escaping the column name is allowed, defaults to true)\n    'onConflict' => OnConflict, (describes ON CONFLICT resolution)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"row":{"name":"row","line":373,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":373,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"insertWithSubquery":{"name":"insertWithSubquery","line":414,"short_desc":"Inserts a row using a subquery.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"subquery":{"name":"subquery","line":414,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQLQueryBuilderInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQLQueryBuilderInterface"],"attributes":{"startLine":414,"endLine":414}},"default":null,"variadic":false,"is_by_ref":false}}},"into":{"name":"into","line":273,"short_desc":"Sets the target table to the given table. Alias for `from`.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":273,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":273,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":273,"endLine":273}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":273,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"join":{"name":"join","line":491,"short_desc":"Adds a JOIN query with the table and optional alias.","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the column name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":491,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":491,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":491,"endLine":491}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":491,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"leftJoin":{"name":"leftJoin","line":551,"short_desc":"Adds a JOIN query with the table and optional alias.","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the column name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":551,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":551,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":551,"endLine":551}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":551,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"limit":{"name":"limit","line":805,"short_desc":"Set the limit for the `SELECT` query.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"limit":{"name":"limit","line":805,"short_desc":"","long_desc":null,"hint":[["int",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":805,"endLine":805}},"default":null,"variadic":false,"is_by_ref":false}}},"offset":{"name":"offset","line":815,"short_desc":"Set the offset for the `SELECT` query.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"offset":{"name":"offset","line":815,"short_desc":"","long_desc":null,"hint":[["int",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":815,"endLine":815}},"default":null,"variadic":false,"is_by_ref":false}}},"on":{"name":"on","line":584,"short_desc":"Adds an `ON` expression to the last `JOIN` expression.","long_desc":"One `JOIN` expression can have multiple `ON` expressions.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Plasma\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":{"leftside":{"name":"leftside","line":584,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"rightside":{"name":"rightside","line":584,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"orHaving":{"name":"orHaving","line":721,"short_desc":"Put the previous HAVING clausel with a logical OR constraint to this HAVING clausel.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":721,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":721,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":721,"endLine":721}},"default":"null","variadic":false,"is_by_ref":false},"value":{"name":"value","line":721,"short_desc":"If not a `Parameter` instance, the value will be wrapped into one.","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"orHavingExt":{"name":"orHavingExt","line":758,"short_desc":"Extended having building. The callback gets a `WhereBuilder` instance, where the callback is supposed to build the HAVING clausel.","long_desc":"The HAVING clausel gets wrapped into parenthesis and with an OR constraint coupled to the previous one.\nSince the HAVING clausel is syntax-wise the same as the WHERE clausel, the WhereBuilder gets used for HAVING, too.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Plasma\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":{"having":{"name":"having","line":758,"short_desc":"Callback signature: `function (\\Plasma\\SQL\\WhereBuilder $qb): void`.","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"orHavingFragment":{"name":"orHavingFragment","line":793,"short_desc":"Put the previous HAVING clausel with a logical OR constraint to this fragmented HAVING clausel.","long_desc":"Since the HAVING clausel is syntax-wise the same as the WHERE clausel, the WhereBuilder gets used for HAVING, too.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"fragment":{"name":"fragment","line":793,"short_desc":"The fragment is expected to have `$$` somehaving to inject the HAVING clausel (from the builder) into its place.","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Fragment"],"attributes":{"startLine":793,"endLine":793}},"default":null,"variadic":false,"is_by_ref":false},"builder":{"name":"builder","line":793,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","WhereBuilder"],"attributes":{"startLine":793,"endLine":793}},"default":null,"variadic":false,"is_by_ref":false}}},"orWhere":{"name":"orWhere","line":623,"short_desc":"Put the previous WHERE clausel with a logical OR constraint to this WHERE clausel.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":623,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":623,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":623,"endLine":623}},"default":"null","variadic":false,"is_by_ref":false},"value":{"name":"value","line":623,"short_desc":"If not a `Parameter` instance, the value will be wrapped into one.","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"orWhereExt":{"name":"orWhereExt","line":658,"short_desc":"Extended where building. The callback gets a `WhereBuilder` instance, where the callback is supposed to build the WHERE clausel.","long_desc":"The WHERE clausel gets wrapped into parenthesis and with an OR constraint coupled to the previous one.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Plasma\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":{"where":{"name":"where","line":658,"short_desc":"Callback signature: `function (\\Plasma\\SQL\\WhereBuilder $qb): void`.","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"orWhereFragment":{"name":"orWhereFragment","line":691,"short_desc":"Put the previous WHERE clausel with a logical OR constraint to this fragmented WHERE clausel.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"fragment":{"name":"fragment","line":691,"short_desc":"The fragment is expected to have `$$` somewhere to inject the WHERE clausel (from the builder) into its place.","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Fragment"],"attributes":{"startLine":691,"endLine":691}},"default":null,"variadic":false,"is_by_ref":false},"builder":{"name":"builder","line":691,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","WhereBuilder"],"attributes":{"startLine":691,"endLine":691}},"default":null,"variadic":false,"is_by_ref":false}}},"orderBy":{"name":"orderBy","line":826,"short_desc":"Add an `ORDER BY` to the query. This will aggregate.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":826,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false],["string",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"descending":{"name":"descending","line":826,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"outerJoin":{"name":"outerJoin","line":531,"short_desc":"Adds a OUTER JOIN query with the table and optional alias.","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the column name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":531,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":531,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":531,"endLine":531}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":531,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"returning":{"name":"returning","line":291,"short_desc":"Adds a RETURNING flag to this query.","long_desc":"Not all DBMS support this!","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"rightJoin":{"name":"rightJoin","line":571,"short_desc":"Adds a RIGHT JOIN query with the table and optional alias.","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the column name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":571,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"as":{"name":"as","line":571,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":571,"endLine":571}},"default":"null","variadic":false,"is_by_ref":false},"options":{"name":"options","line":571,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"select":{"name":"select","line":333,"short_desc":"Select columns with an optional column alias (as the key).","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the table name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"columns":{"name":"columns","line":333,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false],["string",true],["\\Plasma\\SQL\\QueryExpressions\\Fragment",true]],"tags":[],"modifiers":null,"default":"array('*')","variadic":false,"is_by_ref":false},"options":{"name":"options","line":333,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"setPrefix":{"name":"setPrefix","line":887,"short_desc":"Sets the prefix.","long_desc":"When using MySQL, the prefix points to a database. In case\nof PostgreSQL, the prefix points to a schema.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"prefix":{"name":"prefix","line":887,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"setSelectRowLocking":{"name":"setSelectRowLocking","line":302,"short_desc":"Sets the SELECT row-level locking.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"lock":{"name":"lock","line":302,"short_desc":"See the class constants.","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"subquery":{"name":"subquery","line":855,"short_desc":"Adds a subquery to the `SELECT` query.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"subquery":{"name":"subquery","line":855,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQLQueryBuilderInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQLQueryBuilderInterface"],"attributes":{"startLine":855,"endLine":855}},"default":null,"variadic":false,"is_by_ref":false},"alias":{"name":"alias","line":855,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":855,"endLine":855}},"default":"null","variadic":false,"is_by_ref":false}}},"union":{"name":"union","line":865,"short_desc":"Adds an `UNION` to the `SELECT` query.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":865,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQLQueryBuilderInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQLQueryBuilderInterface"],"attributes":{"startLine":865,"endLine":865}},"default":null,"variadic":false,"is_by_ref":false}}},"unionAll":{"name":"unionAll","line":875,"short_desc":"Adds an `UNION ALL` to the `SELECT` query.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":875,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQLQueryBuilderInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQLQueryBuilderInterface"],"attributes":{"startLine":875,"endLine":875}},"default":null,"variadic":false,"is_by_ref":false}}},"update":{"name":"update","line":439,"short_desc":"Updates the rows passing the selection.","long_desc":"Options:\n```\narray(\n    'allowEscape' => bool, (whether escaping the column name is allowed, defaults to true)\n)\n```","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"row":{"name":"row","line":439,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":null,"variadic":false,"is_by_ref":false},"options":{"name":"options","line":439,"short_desc":"","long_desc":null,"hint":[["array",false]],"tags":[],"modifiers":"array","default":"array()","variadic":false,"is_by_ref":false}}},"where":{"name":"where","line":608,"short_desc":"Put the previous WHERE clausel with a logical AND constraint to this WHERE clausel.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":608,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":608,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":608,"endLine":608}},"default":"null","variadic":false,"is_by_ref":false},"value":{"name":"value","line":608,"short_desc":"If not a `Parameter` instance, the value will be wrapped into one.","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"whereExt":{"name":"whereExt","line":637,"short_desc":"Extended where building. The callback gets a `WhereBuilder` instance, where the callback is supposed to build the WHERE clausel.","long_desc":"The WHERE clausel gets wrapped into parenthesis and with an AND constraint coupled to the previous one.","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\Plasma\\Exception",""]],"errors":[],"example":null,"source":null,"parameters":{"where":{"name":"where","line":637,"short_desc":"Callback signature: `function (\\Plasma\\SQL\\WhereBuilder $qb): void`.","long_desc":null,"hint":[["callable",false]],"tags":[],"modifiers":"callable","default":null,"variadic":false,"is_by_ref":false}}},"whereFragment":{"name":"whereFragment","line":678,"short_desc":"Put the previous WHERE clausel with a logical AND constraint to this fragmented WHERE clausel.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"fragment":{"name":"fragment","line":678,"short_desc":"The fragment is expected to have `$$` somewhere to inject the WHERE clausel (from the builder) into its place.","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Fragment"],"attributes":{"startLine":678,"endLine":678}},"default":null,"variadic":false,"is_by_ref":false},"builder":{"name":"builder","line":678,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","WhereBuilder"],"attributes":{"startLine":678,"endLine":678}},"default":null,"variadic":false,"is_by_ref":false}}},"withGrammar":{"name":"withGrammar","line":239,"short_desc":"Clones the querybuilder and sets the grammar.","long_desc":"","hint":[["Plasma\\SQL\\QueryBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":239,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":239,"endLine":239}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":{"QUERY_TYPE_DELETE":{"name":"QUERY_TYPE_DELETE","line":45,"short_desc":"Used internally to describe a `DELETE` query.","long_desc":"","source":null},"QUERY_TYPE_INSERT":{"name":"QUERY_TYPE_INSERT","line":31,"short_desc":"Used internally to describe an `INSERT INTO` query.","long_desc":"","source":null},"QUERY_TYPE_SELECT":{"name":"QUERY_TYPE_SELECT","line":24,"short_desc":"Used internally to describe a `SELECT` query.","long_desc":"","source":null},"QUERY_TYPE_UPDATE":{"name":"QUERY_TYPE_UPDATE","line":38,"short_desc":"Used internally to describe an `UPDATE` query.","long_desc":"","source":null},"ROW_LOCKING_FOR_KEY_SHARE":{"name":"ROW_LOCKING_FOR_KEY_SHARE","line":75,"short_desc":"Locks the row for key share.","long_desc":"","source":null},"ROW_LOCKING_FOR_NO_KEY_UPDATE":{"name":"ROW_LOCKING_FOR_NO_KEY_UPDATE","line":60,"short_desc":"Locks the row for no key update.","long_desc":"","source":null},"ROW_LOCKING_FOR_SHARE":{"name":"ROW_LOCKING_FOR_SHARE","line":68,"short_desc":"Locks the row for share.","long_desc":"","source":null},"ROW_LOCKING_FOR_UPDATE":{"name":"ROW_LOCKING_FOR_UPDATE","line":53,"short_desc":"Locks the row for update.","long_desc":"","source":null}}},"Plasma\\SQL\\QueryExpressions\\BetweenParameter":{"name":"Plasma\\SQL\\QueryExpressions\\BetweenParameter","line":15,"short_desc":"Represents a parameter used for BETWEEN.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/BetweenParameter.php","relative_file":"\/src\/QueryExpressions\/BetweenParameter.php","parent":"Plasma\\SQL\\QueryExpressions\\Parameter","modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":26,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"first":{"name":"first","line":26,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"second":{"name":"second","line":26,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"getValue":{"name":"getValue","line":42,"short_desc":"Get the value.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"hasValue":{"name":"hasValue","line":34,"short_desc":"Whether this parameter has a value. If not, the QueryBuilder is expected to throw an Exception.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"setValue":{"name":"setValue","line":52,"short_desc":"Set the value.","long_desc":"","hint":[["void",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\LogicException",""]],"errors":[],"example":null,"source":null,"parameters":{"value":{"name":"value","line":52,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Column":{"name":"Plasma\\SQL\\QueryExpressions\\Column","line":15,"short_desc":"Represents a column.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Column.php","relative_file":"\/src\/QueryExpressions\/Column.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\ConflictTargetInterface":"Plasma\\SQL\\ConflictTargetInterface"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":37,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":37,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"alias":{"name":"alias","line":37,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":37,"endLine":37}},"default":null,"variadic":false,"is_by_ref":false},"allowEscape":{"name":"allowEscape","line":37,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":94,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"allowEscape":{"name":"allowEscape","line":63,"short_desc":"Whether the column allows escaping.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getAlias":{"name":"getAlias","line":55,"short_desc":"Get the alias.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getColumn":{"name":"getColumn","line":47,"short_desc":"Get the column.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getIdentifier":{"name":"getIdentifier","line":86,"short_desc":"Get the conflict identifier.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":72,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":72,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":72,"endLine":72}},"attributes":{"startLine":72,"endLine":72}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Constraint":{"name":"Plasma\\SQL\\QueryExpressions\\Constraint","line":15,"short_desc":"Represents a constraint. Currently only used with PostgreSQL.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Constraint.php","relative_file":"\/src\/QueryExpressions\/Constraint.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\ConflictTargetInterface":"Plasma\\SQL\\ConflictTargetInterface"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":25,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"name":{"name":"name","line":25,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"getIdentifier":{"name":"getIdentifier","line":41,"short_desc":"Get the conflict identifier.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getName":{"name":"getName","line":33,"short_desc":"Get the constraint name.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Fragment":{"name":"Plasma\\SQL\\QueryExpressions\\Fragment","line":18,"short_desc":"Represents a raw SQL string.","long_desc":"Not all SQL queries can be represented and created with the query builder,\nas such Fragments provide a way to inject unescaped SQL strings into the query.","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Fragment.php","relative_file":"\/src\/QueryExpressions\/Fragment.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":28,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"operation":{"name":"operation","line":28,"short_desc":"E.g. `LOWER(`args`)`","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":52,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"allowEscape":{"name":"allowEscape","line":36,"short_desc":"Whether the fragment allows escaping. Always `false`.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":44,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\FragmentedWhere":{"name":"Plasma\\SQL\\QueryExpressions\\FragmentedWhere","line":15,"short_desc":"Represents a fragmented WHERE clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/FragmentedWhere.php","relative_file":"\/src\/QueryExpressions\/FragmentedWhere.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\QueryExpressions\\WhereInterface":"Plasma\\SQL\\QueryExpressions\\WhereInterface"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":37,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"constraint":{"name":"constraint","line":37,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":37,"endLine":37}},"default":null,"variadic":false,"is_by_ref":false},"fragment":{"name":"fragment","line":37,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Fragment"],"attributes":{"startLine":37,"endLine":37}},"default":null,"variadic":false,"is_by_ref":false},"builder":{"name":"builder","line":37,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","WhereBuilder"],"attributes":{"startLine":37,"endLine":37}},"default":null,"variadic":false,"is_by_ref":false}}},"getParameters":{"name":"getParameters","line":65,"short_desc":"Get the parameters.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":49,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\LogicException",""]],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":49,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":49,"endLine":49}},"attributes":{"startLine":49,"endLine":49}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\GroupBy":{"name":"Plasma\\SQL\\QueryExpressions\\GroupBy","line":15,"short_desc":"Represents a GROUP BY clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/GroupBy.php","relative_file":"\/src\/QueryExpressions\/GroupBy.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":25,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":25,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Column"],"attributes":{"startLine":25,"endLine":25}},"default":null,"variadic":false,"is_by_ref":false}}},"getColumn":{"name":"getColumn","line":33,"short_desc":"Get the column.","long_desc":"","hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":42,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":42,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":42,"endLine":42}},"attributes":{"startLine":42,"endLine":42}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Join":{"name":"Plasma\\SQL\\QueryExpressions\\Join","line":15,"short_desc":"Represents a JOIN clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Join.php","relative_file":"\/src\/QueryExpressions\/Join.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":36,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"type":{"name":"type","line":36,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"table":{"name":"table","line":36,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Table",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Table"],"attributes":{"startLine":36,"endLine":36}},"default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":105,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"addOn":{"name":"addOn","line":70,"short_desc":"Adds an ON clausel.","long_desc":"","hint":[["Plasma\\SQL\\QueryExpressions\\Join",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"on":{"name":"on","line":70,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\On",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","On"],"attributes":{"startLine":70,"endLine":70}},"default":null,"variadic":false,"is_by_ref":false}}},"getOns":{"name":"getOns","line":61,"short_desc":"Get the added ON clausels.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":80,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":80,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":80,"endLine":80}},"attributes":{"startLine":80,"endLine":80}},"default":null,"variadic":false,"is_by_ref":false}}},"getTable":{"name":"getTable","line":53,"short_desc":"Get the table.","long_desc":"","hint":[["\\Plasma\\SQL\\QueryExpressions\\Table",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getType":{"name":"getType","line":45,"short_desc":"Get the type.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\On":{"name":"Plasma\\SQL\\QueryExpressions\\On","line":15,"short_desc":"Represents an ON clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/On.php","relative_file":"\/src\/QueryExpressions\/On.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":31,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"leftside":{"name":"leftside","line":31,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"rightside":{"name":"rightside","line":31,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":49,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":41,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\LogicException",""]],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\OrderBy":{"name":"Plasma\\SQL\\QueryExpressions\\OrderBy","line":15,"short_desc":"Represents an ORDER BY clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/OrderBy.php","relative_file":"\/src\/QueryExpressions\/OrderBy.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":31,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":31,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Column"],"attributes":{"startLine":31,"endLine":31}},"default":null,"variadic":false,"is_by_ref":false},"desc":{"name":"desc","line":31,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false}}},"getColumn":{"name":"getColumn","line":40,"short_desc":"Get the column.","long_desc":"","hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":57,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":57,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":57,"endLine":57}},"attributes":{"startLine":57,"endLine":57}},"default":null,"variadic":false,"is_by_ref":false}}},"isDescending":{"name":"isDescending","line":48,"short_desc":"Whether the sorting is descending.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Parameter":{"name":"Plasma\\SQL\\QueryExpressions\\Parameter","line":15,"short_desc":"Represents a parameter.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Parameter.php","relative_file":"\/src\/QueryExpressions\/Parameter.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":31,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"value":{"name":"value","line":31,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false},"withValue":{"name":"withValue","line":31,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":"false","variadic":false,"is_by_ref":false}}},"getValue":{"name":"getValue","line":48,"short_desc":"Get the value.","long_desc":"","hint":[["mixed",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"hasValue":{"name":"hasValue","line":40,"short_desc":"Whether this parameter has a value. If not, the QueryBuilder is expected to throw an Exception.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"setValue":{"name":"setValue","line":57,"short_desc":"Set the value.","long_desc":"","hint":[["void",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"value":{"name":"value","line":57,"short_desc":"","long_desc":null,"hint":[["mixed",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Subquery":{"name":"Plasma\\SQL\\QueryExpressions\\Subquery","line":15,"short_desc":"Represents a subquery. Interoperable with all Plasma SQL query builder.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Subquery.php","relative_file":"\/src\/QueryExpressions\/Subquery.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":31,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"subquery":{"name":"subquery","line":31,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQLQueryBuilderInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQLQueryBuilderInterface"],"attributes":{"startLine":31,"endLine":31}},"default":null,"variadic":false,"is_by_ref":false},"alias":{"name":"alias","line":31,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":31,"endLine":31}},"default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":62,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getParameters":{"name":"getParameters","line":54,"short_desc":"Get the parameters.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":41,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":41,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":41,"endLine":41}},"attributes":{"startLine":41,"endLine":41}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Table":{"name":"Plasma\\SQL\\QueryExpressions\\Table","line":15,"short_desc":"Represents a table with optional alias and escaping.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Table.php","relative_file":"\/src\/QueryExpressions\/Table.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":37,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"table":{"name":"table","line":37,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false},"alias":{"name":"alias","line":37,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":37,"endLine":37}},"default":null,"variadic":false,"is_by_ref":false},"allowEscape":{"name":"allowEscape","line":37,"short_desc":"","long_desc":null,"hint":[["bool",false]],"tags":[],"modifiers":"bool","default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":86,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"allowEscape":{"name":"allowEscape","line":63,"short_desc":"Whether the table allows escaping.","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getAlias":{"name":"getAlias","line":55,"short_desc":"Get the alias.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":72,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":72,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":72,"endLine":72}},"attributes":{"startLine":72,"endLine":72}},"default":null,"variadic":false,"is_by_ref":false}}},"getTable":{"name":"getTable","line":47,"short_desc":"Get the table.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Union":{"name":"Plasma\\SQL\\QueryExpressions\\Union","line":15,"short_desc":"Represents an UNION clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Union.php","relative_file":"\/src\/QueryExpressions\/Union.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\QueryExpressions\\UnionInterface":"Plasma\\SQL\\QueryExpressions\\UnionInterface"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":25,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":25,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQLQueryBuilderInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQLQueryBuilderInterface"],"attributes":{"startLine":25,"endLine":25}},"default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":55,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getParameters":{"name":"getParameters","line":47,"short_desc":"Get the parameters.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":34,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":34,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":34,"endLine":34}},"attributes":{"startLine":34,"endLine":34}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\UnionAll":{"name":"Plasma\\SQL\\QueryExpressions\\UnionAll","line":15,"short_desc":"Represents an UNION ALL clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/UnionAll.php","relative_file":"\/src\/QueryExpressions\/UnionAll.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\QueryExpressions\\UnionInterface":"Plasma\\SQL\\QueryExpressions\\UnionInterface"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":25,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"query":{"name":"query","line":25,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQLQueryBuilderInterface",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQLQueryBuilderInterface"],"attributes":{"startLine":25,"endLine":25}},"default":null,"variadic":false,"is_by_ref":false}}},"__toString":{"name":"__toString","line":55,"short_desc":"Turns the expression into a SQL string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getParameters":{"name":"getParameters","line":47,"short_desc":"Get the parameters.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":34,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":34,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":34,"endLine":34}},"attributes":{"startLine":34,"endLine":34}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\Where":{"name":"Plasma\\SQL\\QueryExpressions\\Where","line":15,"short_desc":"Represents a WHERE clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/Where.php","relative_file":"\/src\/QueryExpressions\/Where.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\QueryExpressions\\WhereInterface":"Plasma\\SQL\\QueryExpressions\\WhereInterface"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":43,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"constraint":{"name":"constraint","line":43,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":43,"endLine":43}},"default":null,"variadic":false,"is_by_ref":false},"column":{"name":"column","line":43,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":43,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":43,"endLine":43}},"default":null,"variadic":false,"is_by_ref":false},"value":{"name":"value","line":43,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","QueryExpressions","Parameter"],"attributes":{"startLine":43,"endLine":43}},"attributes":{"startLine":43,"endLine":43}},"default":null,"variadic":false,"is_by_ref":false}}},"getParameter":{"name":"getParameter","line":80,"short_desc":"Get the raw parameter.","long_desc":"","hint":[["Plasma\\SQL\\QueryExpressions\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getParameters":{"name":"getParameters","line":88,"short_desc":"Get the parameter wrapped in an array.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":55,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":55,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":55,"endLine":55}},"attributes":{"startLine":55,"endLine":55}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\QueryExpressions\\WhereBuilder":{"name":"Plasma\\SQL\\QueryExpressions\\WhereBuilder","line":15,"short_desc":"Represents a WhereBuilder inside a WHERE clausel.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL\\QueryExpressions","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/QueryExpressions\/WhereBuilder.php","relative_file":"\/src\/QueryExpressions\/WhereBuilder.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"Plasma\\SQL\\QueryExpressions\\WhereInterface":"Plasma\\SQL\\QueryExpressions\\WhereInterface"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":31,"short_desc":"Constructor.","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"constraint":{"name":"constraint","line":31,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":31,"endLine":31}},"default":null,"variadic":false,"is_by_ref":false},"builder":{"name":"builder","line":31,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","WhereBuilder"],"attributes":{"startLine":31,"endLine":31}},"default":null,"variadic":false,"is_by_ref":false}}},"getParameters":{"name":"getParameters","line":49,"short_desc":"Get the parameters.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":41,"short_desc":"Get the SQL string for this.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":41,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":41,"endLine":41}},"attributes":{"startLine":41,"endLine":41}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]},"Plasma\\SQL\\WhereBuilder":{"name":"Plasma\\SQL\\WhereBuilder","line":15,"short_desc":"Used to build more complex WHERE and HAVING clausels.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma\\SQL","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-sql-common\/master\/src\/WhereBuilder.php","relative_file":"\/src\/WhereBuilder.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":[],"traits":[],"source":null,"properties":[],"methods":{"and":{"name":"and","line":75,"short_desc":"Put the previous WHERE clausel with a logical AND constraint to this WHERE clausel.","long_desc":"","hint":[["Plasma\\SQL\\WhereBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":75,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":75,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":75,"endLine":75}},"default":"null","variadic":false,"is_by_ref":false},"value":{"name":"value","line":75,"short_desc":"If not a `Parameter` instance, the value will be wrapped into one.","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"andBuilder":{"name":"andBuilder","line":102,"short_desc":"Put the WHERE builder with a logical AND constraint to this builder. The WHERE clausel of the builder gets wrapped into parenthesis.","long_desc":"","hint":[["Plasma\\SQL\\WhereBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"builder":{"name":"builder","line":102,"short_desc":"","long_desc":null,"hint":[["Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name","parts":["self"],"attributes":{"startLine":102,"endLine":102}},"default":null,"variadic":false,"is_by_ref":false}}},"createWhere":{"name":"createWhere","line":44,"short_desc":"Creates a WHERE expression.","long_desc":"","hint":[["\\Plasma\\SQL\\QueryExpressions\\Where",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"constraint":{"name":"constraint","line":44,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":44,"endLine":44}},"default":null,"variadic":false,"is_by_ref":false},"column":{"name":"column","line":44,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":44,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":44,"endLine":44}},"default":"null","variadic":false,"is_by_ref":false},"value":{"name":"value","line":44,"short_desc":"If not a `Parameter` instance, the value will be wrapped into one.","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"getParameters":{"name":"getParameters","line":144,"short_desc":"Get the parameters.","long_desc":"","hint":[["array",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSQL":{"name":"getSQL","line":134,"short_desc":"Get the SQL string for the where clausel.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"grammar":{"name":"grammar","line":134,"short_desc":"","long_desc":null,"hint":[["\\Plasma\\SQL\\GrammarInterface",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":{"nodeType":"Name_FullyQualified","parts":["Plasma","SQL","GrammarInterface"],"attributes":{"startLine":134,"endLine":134}},"attributes":{"startLine":134,"endLine":134}},"default":null,"variadic":false,"is_by_ref":false}}},"isEmpty":{"name":"isEmpty","line":125,"short_desc":"Whether the where builder is empty (no clausels).","long_desc":"","hint":[["bool",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"or":{"name":"or","line":90,"short_desc":"Put the previous WHERE clausel with a logical OR constraint to this WHERE clausel.","long_desc":"","hint":[["Plasma\\SQL\\WhereBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"column":{"name":"column","line":90,"short_desc":"","long_desc":null,"hint":[["string",false],["\\Plasma\\SQL\\QueryExpressions\\Column",false],["\\Plasma\\SQL\\QueryExpressions\\Fragment",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false},"operator":{"name":"operator","line":90,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":90,"endLine":90}},"default":"null","variadic":false,"is_by_ref":false},"value":{"name":"value","line":90,"short_desc":"If not a `Parameter` instance, the value will be wrapped into one.","long_desc":null,"hint":[["mixed",false],["\\Plasma\\SQL\\QueryExpressions\\Parameter",false],["null",false]],"tags":[],"modifiers":null,"default":"null","variadic":false,"is_by_ref":false}}},"orBuilder":{"name":"orBuilder","line":114,"short_desc":"Put the WHERE builder with a logical OR constraint to this builder. The WHERE clausel of the builder gets wrapped into parenthesis.","long_desc":"","hint":[["Plasma\\SQL\\WhereBuilder",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"builder":{"name":"builder","line":114,"short_desc":"","long_desc":null,"hint":[["Plasma\\SQL\\WhereBuilder",false]],"tags":[],"modifiers":{"nodeType":"Name","parts":["self"],"attributes":{"startLine":114,"endLine":114}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]}}